*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* will now inherit whatever set on body */ }

html {
  font-size: 62.5%;
  /* root font size equiv to 10px based on default browser size: makes it easy to convert to rem */ }

body {
  box-sizing: border-box; }

/* browsers optimised to animate opactity and transform
    can add more than one thing in each transorm
*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  /* 60% {
        transform: rotate(180deg);
    } */
  80% {
    transform: translateX(1rem);
    /*goes to right a bit*/ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* looks how it looks without animation */ } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* apply white border round whole page */ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* corrects slight shakeiness on animation */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-delay: 3s; */
    /* animation-iteration-count: 3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.4rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.u-center-text {
  text-align: center; }

.u-margin-bottom-8 {
  margin-bottom: 8rem; }

.btn {
  /* this is hidden behind the button - see hover::after for making visible*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    /* is treated as text so text-align in text box works for this */
    border-radius: 10rem;
    transition: all .2s;
    /* this applies to the hover and active - 
                    set transition on inital state to apply to other states */
    position: relative;
    /* for pseudo element after positoning*/
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
      /* will fade out cf transition to this set on initial state btn::after*/ }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    /* loase a bit of shadow and blur on depressing button */ }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    /* have to specify this and display */
    display: inline-block;
    height: 100%;
    /* of the btn height/width*/
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom 1s ease-out .75s;
    animation-fill-mode: backwards;
    /* will apply 0% styles before animation starts if have delay */ }

.header {
  height: 95vh;
  /* 95% of viewport height */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /* controls how it crops out when change vport size */
  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
  /*each pair = x y for a corner...can do cool shapes - online generators exist */
  position: relative;
  /* centring the heading text and button 
    top and left takes the start and top of div to 50% of parent (top 40 cf clip-path makes 50 look off)
    then transform shifts it half of its own witdth on the x and y axis
    and it stays in center with vport changes
    */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    /* measured from top of parent element with positon set to relative */
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2*6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2* ((100% - 2*6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3*6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3*6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3*6rem) / 4) + 2 * 6rem); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
