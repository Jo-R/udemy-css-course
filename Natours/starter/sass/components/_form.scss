.form {

    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }

    &__input {
        font-size: 1.5rem;
        font-family: inherit; //inputs don't auto inherit font family
        color: inherit; //...or font color
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent; //stops jumping when this is applied on focus
        width: 90%;
        display: block;
        transition: all .3s;

        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }

        &:focus {
            outline: none; //remove default outline but have seom visibiity of state...
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }
    }

    &__Label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem; //line it up with placholder so effect works nicely
        margin-top: .7rem;
        display: block;
        transition: all .3s; //for label effect below
    }

    &__input:placeholder-shown + &__Label { //adjacent sibling (input and label are siblings and next to each other (in this order) in the html, ~ is general sibling selector)
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem); //moves down when visible
    }

    //for the radio buttons using a span for the styled button and then hide the actual input element
    //since the span is in the label it is linked ot the actual input btn
    &__radio-group {
        width: 49%;
        display: inline-block;
    }

    &__radio-input {
        display: none;
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4rem; //shifts the text over to accomodate the button
    }

    &__radio-button {
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;

        &::after { //selected bit of the button
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    //use the input checked status to manipulate the span based button
    //when radio checked select sibling (radio-label) and child of that sibling (the button with the after)
    &__radio-input:checked + &__radio-label &__radio-button::after {
        opacity: 1;
    }
}